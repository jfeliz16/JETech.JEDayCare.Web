@using JETech.JEDayCare.Web.Models.Client
@model ClientViewModel

@{ViewData["Title"] = "New Child"; }

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h5 class="title-form">@(ViewData["Title"])</h5>
    </div>
    <div class="widget-container">
        <div id="div-loadPanel" class="form-container">
            <form id="clientForm" asp-action="Create" asp-controller="ClientMant" method="post">
                @Html.HiddenFor(c => c.Id)
                @Html.HiddenFor(c => c.StatusId)
                @(Html.DevExtreme().Form<ClientViewModel>()
                .ID("formDev")
                .ColCount(2)
                .MinColWidth(300)
                .LabelLocation(FormLabelLocation.Left)
                .ShowColonAfterLabel(true)
                //.ShowValidationSummary(true)
                .Items(items =>
                {
                    items.AddGroup()
                        .Items(items =>
                        {
                            items.AddSimpleFor(m => m.FirstNameChild);
                            items.AddSimpleFor(m => m.BirthDateChild)
                            .Editor(e => e
                               .DateBox()
                               .Width("30%"));
                            items.AddEmpty();
                        });
                    items.AddGroup()
                        .Items(items =>
                        {
                            items.AddSimpleFor(m => m.LastNameChild);
                        });
                })
                .Items(items =>
                {
                    items.AddGroup()
                        .Caption("Tutor Information")
                        .Items(items =>
                        {
                            items.AddSimpleFor(m => m.FirstName);
                            items.AddSimpleFor(m => m.LastName);
                            items.AddSimpleFor(m => m.Email)
                            .Editor(e => e
                                .TextBox()
                                .Width("50%"));
                            items.AddSimpleFor(m => m.CellPhone)
                            .Editor(e => e
                                .TextBox()
                                .Width("30%"));
                            items.AddSimpleFor(m => m.HomePhone)
                            .Editor(e => e
                                .TextBox()
                                .Width("30%"));
                        });
                    items.AddGroup()
                        .Caption("Address")
                       .Items(items =>
                       {
                           items.AddSimpleFor(m => m.Address);
                           items.AddSimpleFor(m => m.StateId)
                            .Editor(e => e
                               .SelectBox()
                               .ValueExpr("Id")
                               .DisplayExpr("Name")
                               //.DataSource(new JS("getContries(getContrieCallBack)")));
                               .DataSource(d => d.StaticJson().Url("~/api/AdminGeneralApi/States")));
                           //.DataSource(d => d.Mvc().LoadAction("GetContries")));
                           items.AddSimpleFor(m => m.City);
                           items.AddSimpleFor(m => m.ZipCode)
                            .Editor(e => e
                                .TextBox()
                                .Width("30%"));
                       });
                })
                .FormData(Model))
                <div id="div-final-action-form" class="row justify-content-md-center">
                    <div class="form-group col-lg-2 col-md-2 col-sm-12">
                        @(Html.DevExtreme().Button()
                            .Type(ButtonType.Success)
                            .OnClick("onClickSave")
                            .Text("Save")
                            .Icon("save"))
                    </div>
                    <div class="form-group col-lg-2 col-md-2 col-sm-12">
                        @(Html.DevExtreme().Button()
                            .Text("Cancel")
                            .OnClick(@<text>function () { window.location = "@Url.Action("Index", "ClientMant")"; }</text>))
                    </div>
                </div>
            </form>          
        </div>
    </div>
</div>

@(Html.DevExtreme().LoadPanel()
    .ID("loadPanel")
    .ShadingColor("rgba(0,0,0,0.4)")
    .Position(p => p.Of("#div-loadPanel"))
    .Visible(false)
    .ShowIndicator(true)
    .ShowPane(true)
    .Shading(true)
    .CloseOnOutsideClick(false)
    )

@section Scripts
{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");
       await Html.RenderPartialAsync("_Notification");
     }
}

<script>

    function getLoadPanelInstance()
    {
        return $("#loadPanel").dxLoadPanel("instance");
    }

    function onClickSave() {
        if (confirm("Do you want to save the register ?")) {
            var loadPanel = getLoadPanelInstance();
            loadPanel.show();

            var formData = getFormData('#clientForm')
            var dataModel = JSON.stringify(formData);                                    
            var actionType = 'post';

            if (!(formData['Id'] === '')) {
                actionType = 'put';
            }

            $.ajax({
                url: 'https://'+'@Context.Request.Host' + '/Api/Client',
                dataType: "json",
                data: dataModel,
                contentType: 'application/json',
                type: actionType,
                success: function (result) {
                    if (result !== null && result.Data !== null && result.Data > 0) {
                        loadPanel.hide();

                        window.location = '@Url.Action("Index", "ClientMant",new { notiMessage ="Operation succesful"})';
                    } else {
                        loadPanel.hide();
                        $("#formDev").dxForm('instance').validate();
                    }
                },
                error: function (error) {
                    //alert(JSON.stringify(error));
                    loadPanel.hide();
                }
            });
        }
    }

    function getFormData(name) {
        var unindexed_array = $(name).serializeArray();
        var indexed_array = {};

        $.map(unindexed_array, function (n, i) {
            indexed_array[n['name']] = n['value'];
        });
        return indexed_array;
    }
</script>




